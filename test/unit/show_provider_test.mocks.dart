// Mocks generated by Mockito 5.1.0 from annotations
// in tv_shows/test/unit/show_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_shows/models/register_info.dart' as _i5;
import 'package:tv_shows/models/review.dart' as _i8;
import 'package:tv_shows/models/show.dart' as _i7;
import 'package:tv_shows/models/signin_info.dart' as _i6;
import 'package:tv_shows/models/submit_review.dart' as _i9;
import 'package:tv_shows/models/update_user.dart' as _i10;
import 'package:tv_shows/models/user.dart' as _i2;
import 'package:tv_shows/utilities/networking_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

/// A class which mocks [NetworkingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkingRepository extends _i1.Mock
    implements _i3.NetworkingRepository {
  MockNetworkingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.User> registerUser(_i5.RegisterInfo? registerInfo) =>
      (super.noSuchMethod(Invocation.method(#registerUser, [registerInfo]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<_i2.User> signInUser(_i6.SignInInfo? signInInfo) =>
      (super.noSuchMethod(Invocation.method(#signInUser, [signInInfo]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<List<_i7.Show>> fetchShows() =>
      (super.noSuchMethod(Invocation.method(#fetchShows, []),
              returnValue: Future<List<_i7.Show>>.value(<_i7.Show>[]))
          as _i4.Future<List<_i7.Show>>);
  @override
  _i4.Future<List<_i8.Review>> fetchReviews(String? id) =>
      (super.noSuchMethod(Invocation.method(#fetchReviews, [id]),
              returnValue: Future<List<_i8.Review>>.value(<_i8.Review>[]))
          as _i4.Future<List<_i8.Review>>);
  @override
  _i4.Future<void> submitReview(_i9.SubmitReview? review) =>
      (super.noSuchMethod(Invocation.method(#submitReview, [review]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.User> updateUser(_i10.UpdateUser? userInfo) =>
      (super.noSuchMethod(Invocation.method(#updateUser, [userInfo]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i4.Future<_i2.User>);
}

/// A class which mocks [Show].
///
/// See the documentation for Mockito's code generation for more information.
class MockShow extends _i1.Mock implements _i7.Show {
  MockShow() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  set title(String? _title) =>
      super.noSuchMethod(Invocation.setter(#title, _title),
          returnValueForMissingStub: null);
  @override
  String get description =>
      (super.noSuchMethod(Invocation.getter(#description), returnValue: '')
          as String);
  @override
  set description(String? _description) =>
      super.noSuchMethod(Invocation.setter(#description, _description),
          returnValueForMissingStub: null);
  @override
  int get noOfReviews =>
      (super.noSuchMethod(Invocation.getter(#noOfReviews), returnValue: 0)
          as int);
  @override
  set noOfReviews(int? _noOfReviews) =>
      super.noSuchMethod(Invocation.setter(#noOfReviews, _noOfReviews),
          returnValueForMissingStub: null);
  @override
  double get averageRating =>
      (super.noSuchMethod(Invocation.getter(#averageRating), returnValue: 0.0)
          as double);
  @override
  set averageRating(double? _averageRating) =>
      super.noSuchMethod(Invocation.setter(#averageRating, _averageRating),
          returnValueForMissingStub: null);
  @override
  String get imageUrl =>
      (super.noSuchMethod(Invocation.getter(#imageUrl), returnValue: '')
          as String);
  @override
  set imageUrl(String? _imageUrl) =>
      super.noSuchMethod(Invocation.setter(#imageUrl, _imageUrl),
          returnValueForMissingStub: null);
  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  set id(String? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
